{"ast":null,"code":"var _jsxFileName = \"/home/khas/Git/TI2-TraductorOCR/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { createWorker } from 'tesseract.js';\nimport './App.css'; // This App() function gets called at least twice\n// so, to avoid repeating printing the signs twice as well,\n// we use this variable\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar counter = 1;\n\nfunction App() {\n  _s();\n\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [textResult, setTextResult] = useState(\"\");\n  const worker = createWorker();\n\n  const convertImagetoText = async () => {\n    await worker.load();\n    await worker.loadLanguage(\"spa\");\n    /*Establecer un lenguaje*/\n\n    await worker.initialize(\"spa\");\n    /*Inicializar*/\n\n    const {\n      data\n    } = await worker.recognize(selectedImage);\n    /*Extraer el texto de la imagen*/\n\n    setTextResult(data.text);\n  };\n\n  useEffect(() => {\n    convertImagetoText();\n  }, [selectedImage]);\n\n  const handleChangeImage = e => {\n    setSelectedImage(e.target.files[0]);\n  };\n\n  if (textResult !== '' && counter === 1) {\n    printSigns(textResult); // Here it changes. So that it won't print the signs twice,\n    // because it's only called when counter is 1.\n    // Pretty ad-hoc solution, but for now it's enough, I hope\n\n    counter++;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Traductor de texto a lenguaje de se\\xF1as mexicano\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"description\",\n      children: \"Esta webapp extrae el texto de una imagen y deletrea su equivalente al lenguaje de se\\xF1as mexicano.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"upload\",\n        children: \"Cargar Imagen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"upload\",\n        accept: \"image/*\",\n        onChange: handleChangeImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 4\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Imagen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Texto de la imagen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 4\n      }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: URL.createObjectURL(selectedImage),\n          alt: \"Miniatura\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), textResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-paragraph\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: textResult\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"1uuQh6h4xpFY0HRRGE5AnfEz32I=\");\n\n_c = App;\n\nfunction isLetter() {\n  let letter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return letter.length === 1 && letter.toLowerCase() !== letter.toUpperCase();\n}\n\nfunction printSigns() {\n  let text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let div = document.getElementById('signs');\n\n  for (const elem of text) {\n    if (isLetter(elem)) {\n      let img = document.createElement('img'); // This file structure only works for UNIX and UNIX-like OSs\n      // such as Linux or MacOS\n\n      img.src = require('./alphabet/' + elem.toUpperCase() + '.png');\n      img.className = 'signs';\n      console.log('Image: ' + img.src + ' Class: ' + img.className);\n      div.appendChild(img);\n    }\n  }\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","createWorker","counter","App","selectedImage","setSelectedImage","textResult","setTextResult","worker","convertImagetoText","load","loadLanguage","initialize","data","recognize","text","handleChangeImage","e","target","files","printSigns","URL","createObjectURL","isLetter","letter","length","toLowerCase","toUpperCase","div","document","getElementById","elem","img","createElement","src","require","className","console","log","appendChild"],"sources":["/home/khas/Git/TI2-TraductorOCR/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport {createWorker} from 'tesseract.js';\nimport './App.css';\n\n// This App() function gets called at least twice\n// so, to avoid repeating printing the signs twice as well,\n// we use this variable\nvar counter = 1;\n\nfunction App() {\n\tconst [selectedImage, setSelectedImage] = useState(null);\n\tconst [textResult, setTextResult] = useState(\"\");\n\n\tconst worker = createWorker();\n\n\tconst convertImagetoText = async () =>{\n\t\tawait worker.load();\n\t\tawait worker.loadLanguage(\"spa\"); /*Establecer un lenguaje*/\n\t\tawait worker.initialize(\"spa\"); /*Inicializar*/\n\t\tconst { data } = await worker.recognize(selectedImage); /*Extraer el texto de la imagen*/\n\t\tsetTextResult(data.text);\n\t}\n\n\tuseEffect(() => {\n\t\tconvertImagetoText();\n\t}, [selectedImage])\n\t\n\n\tconst handleChangeImage = e =>{\n\t\tsetSelectedImage(e.target.files[0]);\n\t}\n\n\tif (textResult !== '' && counter === 1) {\n\t\tprintSigns(textResult);\n\n\t\t// Here it changes. So that it won't print the signs twice,\n\t\t// because it's only called when counter is 1.\n\t\t// Pretty ad-hoc solution, but for now it's enough, I hope\n\t\tcounter++;\t\n\t}\n\n\treturn( \n\t\t<div className='container'>\n\t\t\t<h1>Traductor de texto a lenguaje de señas mexicano</h1>\n\t\t\t<p className='description'>Esta webapp extrae el texto de una imagen y deletrea su equivalente al lenguaje de señas mexicano.</p>\n\t\t\t<div className='container-input'>\n\t\t\t<label htmlFor='upload'>Cargar Imagen</label>\n\t\t\t<input type='file' id='upload' accept='image/*' onChange={handleChangeImage}/> {/*Input que solo acepta imagenes, de cualquier extension*/}\n\t\t\t</div>\n\n\t\t\t<div className='results'>\n\t\t\t<h3>Imagen</h3>\n\t\t\t<h3>Texto de la imagen</h3>\n\t\t\t{selectedImage && (\n\t\t\t\t<div className='results-image'>\n\t\t\t\t<img src={URL.createObjectURL(selectedImage)} alt='Miniatura'></img>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{textResult && (\n\t\t\t\t<div className='results-paragraph'>\n\t\t\t\t<p>{textResult}</p>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n\t}\n\nfunction isLetter(letter='') {\n\treturn letter.length === 1 && (letter.toLowerCase() !== letter.toUpperCase());\n}\n\nfunction printSigns(text='') {\n\tlet div = document.getElementById('signs');\n\n\tfor (const elem of text) {\n\t\tif (isLetter(elem)) {\n\t\t\tlet img = document.createElement('img');\n\t\t\t\n\t\t\t// This file structure only works for UNIX and UNIX-like OSs\n\t\t\t// such as Linux or MacOS\n\t\t\timg.src = require('./alphabet/' + elem.toUpperCase() + '.png');\n\t\t\timg.className = 'signs';\n\t\t\tconsole.log('Image: ' + img.src + ' Class: ' + img.className);\n\t\t\tdiv.appendChild(img);\n\t\t}\n\t}\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}